parser: '@typescript-eslint/parser'
extends:
  - eslint:recommended
  - plugin:@typescript-eslint/eslint-recommended
  - plugin:@typescript-eslint/recommended
  - prettier
  - prettier/@typescript-eslint
plugins:
  - '@typescript-eslint'
  - import
rules:
  '@typescript-eslint/explicit-function-return-type': 'off'
  '@typescript-eslint/explicit-member-accessibility': 'off'
  '@typescript-eslint/no-angle-bracket-type-assertion': 'off'
  '@typescript-eslint/no-non-null-assertion': 'off'
  '@typescript-eslint/no-unused-vars':
    - warn
    - argsIgnorePattern: '^_'
      ignoreRestSiblings: true
  '@typescript-eslint/no-use-before-define':
    - warn
    - functions: false
      classes: false
      variables: true
  '@typescript-eslint/prefer-optional-chain': warn
  arrow-body-style: warn
  import/no-extraneous-dependencies: warn
  import/order:
    - warn
    - newlines-between: always
      alphabetize:
        order: 'asc'
  no-case-declarations: warn
  no-debugger: warn
  no-else-return: warn
  no-param-reassign: warn
  no-undef: 'off'
  no-unused-vars: 'off'
  no-var: warn
  object-shorthand: warn
  padding-line-between-statements:
    - warn
    - blankLine: always
      prev: '*'
      next: class
    - blankLine: always
      prev: '*'
      next: for
    - blankLine: always
      prev: '*'
      next: function
    - blankLine: always
      prev: '*'
      next: if
    - blankLine: always
      prev: '*'
      next: return
    - blankLine: always
      prev: '*'
      next: switch
    - blankLine: always
      prev: '*'
      next: try
    - blankLine: always
      prev: '*'
      next: while
    - blankLine: always
      prev: block-like
      next:
        - let
        - const
  prefer-const: warn
  yoda: warn
